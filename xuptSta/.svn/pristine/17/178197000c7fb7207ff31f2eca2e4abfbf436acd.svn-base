package com.xuptSta.action;

import java.util.List;

import javax.annotation.Resource;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import net.sf.json.JsonConfig;

import org.apache.struts2.ServletActionContext;
import org.springframework.stereotype.Controller;

import com.opensymphony.xwork2.ActionSupport;
import com.xuptSta.entity.BlogType;
import com.xuptSta.entity.DynamicType;
import com.xuptSta.entity.PageBean;
import com.xuptSta.service.BlogService;
import com.xuptSta.service.BlogTypeService;
import com.xuptSta.util.ResponseUtil;
@Controller
public class BlogTypeAction extends ActionSupport{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@Resource
	private BlogTypeService blogTypeService;
	@Resource
	private BlogService blogService;
	
	private String page;
	private Long total;
	private String ids;
	private String rows;
	private BlogType s_blogType;
	private BlogType blogType;
	
	public BlogType getS_blogType() {
		return s_blogType;
	}
	public void setS_blogType(BlogType s_blogType) {
		this.s_blogType = s_blogType;
	}
	public BlogType getBlogType() {
		return blogType;
	}
	public void setBlogType(BlogType blogType) {
		this.blogType = blogType;
	}
	public String getPage() {
		return page;
	}
	public void setPage(String page) {
		this.page = page;
	}
	public Long getTotal() {
		return total;
	}
	public void setTotal(Long total) {
		this.total = total;
	}
	public String getIds() {
		return ids;
	}
	public void setIds(String ids) {
		this.ids = ids;
	}
	public String getRows() {
		return rows;
	}
	public void setRows(String rows) {
		this.rows = rows;
	}
	
	public String list()throws Exception{
		PageBean pageBean = new PageBean(Integer.parseInt(page),Integer.parseInt(rows));
		List<BlogType> blogTypeList=blogTypeService.findBlogType(s_blogType,pageBean);
		Long total=blogTypeService.getBlogTypeCount(s_blogType);
		JsonConfig jsonConfig=new JsonConfig();
		jsonConfig.setExcludes(new String[]{"blogList"});
		JSONArray rows=JSONArray.fromObject(blogTypeList, jsonConfig);
		JSONObject result=new JSONObject();
		result.put("rows", rows);
		result.put("total", total);
		ResponseUtil.write(ServletActionContext.getResponse(), result);
		return null;
	}
	
	public String save()throws Exception{
		blogTypeService.saveBlogType(blogType);
		JSONObject result=new JSONObject();
		result.put("success", true);
		ResponseUtil.write(ServletActionContext.getResponse(), result);
		return null;
	}
	
	public String delete()throws Exception{
		JSONObject result=new JSONObject();
		String[] idsStr=ids.split(",");
		for(int i=0;i<idsStr.length;i++){
			if(blogService.existBlogWithBlogTypeId(Integer.parseInt(idsStr[i]))){
				result.put("exist", "成员类型下有成员不能删除");
			}else{
				BlogType blogType=blogTypeService.getBlogTypeById(Integer.parseInt(idsStr[i]));
				blogTypeService.deleteBlogType(blogType);
			}
		}
		result.put("success", true);
		ResponseUtil.write(ServletActionContext.getResponse(), result);
		return null;
	}
}
