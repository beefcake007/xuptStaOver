package com.xuptSta.action;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import net.sf.json.JsonConfig;

import org.apache.struts2.ServletActionContext;
import org.apache.struts2.interceptor.ServletRequestAware;
import org.springframework.stereotype.Controller;

import com.opensymphony.xwork2.ActionSupport;
import com.xuptSta.entity.MemberType;
import com.xuptSta.entity.PageBean;
import com.xuptSta.service.MemberService;
import com.xuptSta.service.MemberTypeService;
import com.xuptSta.util.ResponseUtil;
@Controller
public class MemberTypeAction extends ActionSupport implements ServletRequestAware{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private HttpServletRequest request;
	
	@Resource
	private MemberTypeService memberTypeService;
	@Resource
	private MemberService memberService;
	private String page;
	private String rows;
	private Long total;
	private MemberType memberType;
	private MemberType s_memberType;
	private String ids;

	public String getPage() {
		return page;
	}

	public void setPage(String page) {
		this.page = page;
	}

	public String getRows() {
		return rows;
	}

	public void setRows(String rows) {
		this.rows = rows;
	}

	public Long getTotal() {
		return total;
	}

	public void setTotal(Long total) {
		this.total = total;
	}

	public MemberType getMemberType() {
		return memberType;
	}

	public void setMemberType(MemberType memberType) {
		this.memberType = memberType;
	}

	public MemberType getS_memberType() {
		return s_memberType;
	}

	public void setS_memberType(MemberType s_memberType) {
		this.s_memberType = s_memberType;
	}

	public String getIds() {
		return ids;
	}

	public void setIds(String ids) {
		this.ids = ids;
	}

	public String comboList()throws Exception{
		JSONArray jsonArray=new JSONArray();
		JSONObject jsonObject=new JSONObject();
		jsonObject.put("id", "");
		jsonObject.put("typeName","请选择...");
		jsonArray.add(jsonObject);
		List<MemberType> memberTypeList=memberTypeService.findMemberTypeList(null,null);
		JsonConfig jsonConfig=new JsonConfig();
		jsonConfig.setExcludes(new String[]{"memberList"});
		JSONArray rows=JSONArray.fromObject(memberTypeList, jsonConfig);
		jsonArray.addAll(rows);
		ResponseUtil.write(ServletActionContext.getResponse(), jsonArray);
		return null;
	}
	
	
	public String list()throws Exception{
		PageBean pageBean=new PageBean(Integer.parseInt(page),Integer.parseInt(rows));
		List<MemberType> memberTypeList=memberTypeService.findMemberTypeList(s_memberType,pageBean);
		Long total=memberTypeService.getMemberTypeCount(s_memberType);
		JsonConfig jsonConfig=new JsonConfig();
		jsonConfig.setExcludes(new String[]{"memberList"});
		JSONArray rows=JSONArray.fromObject(memberTypeList, jsonConfig);
		JSONObject result=new JSONObject();
		result.put("rows", rows);
		result.put("total", total);
		ResponseUtil.write(ServletActionContext.getResponse(), result);
		return null;
	}
	
	public String save()throws Exception{
		memberTypeService.saveMemberType(memberType);
		JSONObject result=new JSONObject();
		result.put("success", true);
		ResponseUtil.write(ServletActionContext.getResponse(), result);
		return null;
	}
	
	public String delete()throws Exception{
		JSONObject result=new JSONObject();
		String[] idsStr=ids.split(",");
		for(int i=0;i<idsStr.length;i++){
			if(memberService.existMemberWithMemberTypeId(Integer.parseInt(idsStr[i]))){
				result.put("exist", "成员类型下有成员不能删除");
			}else{
				MemberType memberType=memberTypeService.getMemberTypeById(Integer.parseInt(idsStr[i]));
				memberTypeService.deleteMemberType(memberType);
			}
		}
		result.put("success", true);
		ResponseUtil.write(ServletActionContext.getResponse(), result);
		return null;
	}
	
	@Override
	public void setServletRequest(HttpServletRequest request) {
		this.request=request;
	}

}
