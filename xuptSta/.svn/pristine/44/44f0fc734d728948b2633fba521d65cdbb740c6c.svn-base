package com.xuptSta.action;

import java.util.Date;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import net.sf.json.JsonConfig;

import org.apache.struts2.ServletActionContext;
import org.apache.struts2.interceptor.ServletRequestAware;
import org.springframework.stereotype.Controller;

import com.opensymphony.xwork2.ActionSupport;
import com.xuptSta.entity.Blog;
import com.xuptSta.entity.Blogger;
import com.xuptSta.entity.Comment;
import com.xuptSta.entity.PageBean;
import com.xuptSta.service.BlogService;
import com.xuptSta.service.CommentService;
import com.xuptSta.util.ResponseUtil;
@Controller
public class CommentAction extends ActionSupport implements ServletRequestAware{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private HttpServletRequest request;
	
	@Resource
	private CommentService commentService;
	@Resource
	private BlogService blogService;
	
	private String ids;
	private String page;
	private String rows;
	private Comment comment;
	private Comment s_comment;
	private List<Comment> commentList;
	private Blog blog;
	private Long total;
	
	
	public Long getTotal() {
		return total;
	}
	public void setTotal(Long total) {
		this.total = total;
	}
	public Blog getBlog() {
		return blog;
	}
	public void setBlog(Blog blog) {
		this.blog = blog;
	}
	public String getIds() {
		return ids;
	}
	public void setIds(String ids) {
		this.ids = ids;
	}
	public String getPage() {
		return page;
	}
	public void setPage(String page) {
		this.page = page;
	}
	public String getRows() {
		return rows;
	}
	public void setRows(String rows) {
		this.rows = rows;
	}
	public Comment getComment() {
		return comment;
	}
	public void setComment(Comment comment) {
		this.comment = comment;
	}
	public Comment getS_comment() {
		return s_comment;
	}
	public void setS_comment(Comment s_comment) {
		this.s_comment = s_comment;
	}
	public List<Comment> getCommentList() {
		return commentList;
	}
	public void setCommentList(List<Comment> commentList) {
		this.commentList = commentList;
	}
	
	public String save()throws Exception{
		comment.setCommentDate(new Date());
		comment.setStatus("1");
		String userIP=request.getRemoteAddr();
		comment.setUserIp(userIP);
		int blogId=comment.getBlog().getId();
		Blog blog=blogService.getBlogById(blogId);
		blog.setReplyHit(blog.getReplyHit()+1);
		blogService.saveBlog(blog);
		commentService.saveComment(comment);
		JSONObject result=new JSONObject();
		result.put("success", true);
		ResponseUtil.write(ServletActionContext.getResponse(), result);
		return null;
	}
	
	public String list()throws Exception{
		PageBean pageBean = new PageBean(Integer.parseInt(page),Integer.parseInt(rows));
		List<Comment> commentList=commentService.findCommentList(s_comment, pageBean);
		total=commentService.getCommentCount(s_comment);
		JsonConfig jsonConfig=new JsonConfig();
		jsonConfig.registerJsonValueProcessor(java.util.Date.class, new DateJsonValueProcessor("yyyy-MM-dd HH:mm"));
		jsonConfig.registerJsonValueProcessor(Blog.class, new ObjectJsonValueProcessor(new String[]{"id","title"}, Blog.class));
		jsonConfig.registerJsonValueProcessor(Blogger.class, new ObjectJsonValueProcessor(new String[]{"id","nickName"}, Blogger.class));
		JSONArray jsonArray=JSONArray.fromObject(commentList, jsonConfig);
		JSONObject result=new JSONObject();
		result.put("total", total);
		result.put("rows", jsonArray);
		ResponseUtil.write(ServletActionContext.getResponse(), result);
		return null;
	}
	
	public String delete()throws Exception{
		JSONObject result=new JSONObject();
		String[] idsStr=ids.split(",");
		for(int i=0;i<idsStr.length;i++){
			Comment comment=commentService.getCommentById(Integer.parseInt(idsStr[i]));
			commentService.deleteComment(comment);
		}
		result.put("success", true);
		ResponseUtil.write(ServletActionContext.getResponse(), result);
		return null;
	}
	
	@Override
	public void setServletRequest(HttpServletRequest request) {
		this.request=request;
	}
}
